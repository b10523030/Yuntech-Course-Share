c(cvl,cvu)
(z<cvl)|(z>cvu)
#2
#H0:u<=6
#H1:u>6
xbar<-5.8
#2
#H0:u<=6
#H1:u>6
xbar<-5.8
pmean<-6
n<-36
sd<-1.7
alpha<-0.05
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail=FALSE)
pvalue
pvalue <alpha
cv <-qnorm(1-alpha)
#3
#H0:u>=170
#H1:u<170
xbar<-178
pmean<-170
n<-400
sd<-65
alpha<-0.1
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z)
pvalue
pvalue <alpha
cv <-qnorm(alpha)
cv
z<cv
#4
#H0:u=79.15
#H1:u!=79.15
xbar<-80
pmean<-79.15
n<-100
sd<-4
alpha<-0.01
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <-2*pnorm(z)
pvalue
pvalue <alpha
cvl <-qnorm(alpha/2)
cvu <-qnorm(1-(alpha/2))
c(cvl,cvu)
(z<cv)|(z>cvu)
#2
#H0:u<=6
#H1:u>6
xbar<-5.8
pmean<-6
n<-36
sd<-1.7
alpha<-0.05
#2
#H0:u<=6
#H1:u>6
xbar<-5.8
pmean<-6
n<-36
sd<-1.7
alpha<-0.05
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail=FALSE)
pvalue
pvalue <alpha
cv <-qnorm(1-alpha)
cv
z>cv
#4
#H0:u=79.15
#H1:u!=79.15
xbar<-80
pmean<-79.15
n<-100
sd<-4
alpha<-0.01
z <-(xbar-pmean)/(sd/sqrt(n))
z
#5 OK
#H0:u<=1700
#H1:u>1700
xbar<-1298
pmean<-1700
n<-12
sd<-450
alpha<-0.05
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail = FALSE)
pvalue
pvalue<alpha
#6
#H0:u=85
#H1:u!=85
xbar<-80.94
pmean<-85
n<-25
sd<-11.6
alpha<-0.1
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <-2*pnorm(z)
pvalue
pvalue <alpha
#6
#H0:u=85
#H1:u!=85
xbar<-80.94
pmean<-85
n<-25
sd<-11.6
alpha<-0.1
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <-2*pnorm(z)
pvalue
pvalue <alpha
cvl <-qnorm(alpha/2)
cvu <-qnorm(1-(alpha/2))
c(cvl,cvu)
(z<cv)|(z>cvu)
#7
#H0:u>=613
#H1:u<613
xbar<-((13*60+48)+(10*60+10)+(7*60+54)+(9*60+22)+(8*60+38)+(9*60+48))/6
pmean<-10*60+13
n<-6
sd<-76
alpha<-0.05
z <-(xbar-pmean)/(sd/sqrt(n))
z
#7
#H0:u>=613
#H1:u<613
xbar<-((13*60+48)+(10*60+10)+(7*60+54)+(9*60+22)+(8*60+38)+(9*60+48))/6
pmean<-10*60+13
n<-6
sd<-76
alpha<-0.05
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z)
pvalue
pvalue <alpha
cv <-qnorm(alpha)
#8
#H0:u<=30
#H1:u>30
xbar<-20
pmean<-30
n<-5
sd<-6
alpha<-0.01
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail=FALSE)
pvalue
pvalue <alpha
cv <-qnorm(1-alpha)
cv
z>cv
#9
#H0:u<=180
#H1:u>180
xbar<-195
pmean<-190
n<-40
sd<-50
alpha<-0.1
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail=FALSE)
pvalue
pvalue <alpha
#9
#H0:u<=180
#H1:u>180
xbar<-195
pmean<-190
n<-40
sd<-50
alpha<-0.1
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail=FALSE)
pvalue
pvalue <alpha
cv <-qnorm(1-alpha)
cv
z>cv
#10
#H0:u<=30
#H1:u>30
xbar<-33.4
pmean<-30
cv
z>cv
#10
#H0:u<=30
#H1:u>30
xbar<-33.4
pmean<-30
n<-15
sd<-8.2
alpha<-0.05
z <-(xbar-pmean)/(sd/sqrt(n))
z
pvalue <- pnorm(z,lower.tail=FALSE)
pvalue
pvalue <alpha
cv <-qnorm(1-alpha)
cv
z>cv
#non-reject H0 , The store manager's purchase volume can meet the needs of consumers
#325 teamwork
mean <-2.6
sd <-1.4
n <-100
a <- (3-2.6)/(1.4/sqrt(100))
pnrom(a,lower.tail=FALSE)
#325 teamwork
mean <-2.6
sd <-1.4
n <-100
a <- (3-2.6)/(1.4/sqrt(100))
pnrom(a,lower.tail=FALSE)
a
pnorm(a,lower.tail=FALSE)
z <-(xbar-mean)/sd
z
xbar <-60
mean <-70
sd <-5
z <-(xbar-mean)/sd
z
z
p <- pnrom(lower.tail = FALSE)
p
p <- pnorm(lower.tail = FALSE)
p
z <-(xbar-mean)/sd
z
p <- pnorm(z,lower.tail = FALSE)
p
#Left tail
#H0:u>=100000 H1:u<100000
n <-64
xbar <-98000
pmean <-100000
sd <-10
sig <-0.05
z<-(xbar-pmean)/(sd/sqrt(n))
z
CV <-qnorm(sig) #right tail
CV
qnorm((1-0.684)/2)
n <- 25
sd <- 0.5
xbar <- 1.5
sig <- 0.9
se <- abs(qnorm((1-sig)/2)*psd/qrt(n))
lcl <- xbar-se
ucl <- xbar+se
ci <- c(lcl,ucl)
ci
n <- 25
sd <- 0.5
xbar <- 1.5
sig <- 0.9
se <- abs(qnorm((1-sig)/2)*sd/qrt(n))
lcl <- xbar-se
n <- 25
sd <- 0.5
xbar <- 1.5
sig <- 0.9
se <- abs(qnorm((1-sig)/2)*sd/sqrt(n))
lcl <- xbar-se
ucl <- xbar+se
ci <- c(lcl,ucl)
ci
n <- 25
sd <- 0.5
xbar <- 1.5
sig <- 0.9
se <- abs(qnorm((1-sig)/2)*sd/sqrt(n))
se
lcl <- xbar-se
ucl <- xbar+se
ci <- c(lcl,ucl)
ci
n <- 16
sd <- 25
xbar <- 240
sig <- 0.9
se <- abs(qnorm((1-sig)/2)*sd/sqrt(n))
se
lcl <- xbar-se
ucl <- xbar+se
ci <- c(lcl,ucl)
ci
#Left tail
#H0:u<=50 H1:u>50
n <-36
xbar <-60
pmean <-50
sd <-10
sig <-0.05
z<-(xbar-pmean)/(sd/sqrt(n))
z
CV <-qnorm(1-sig)
CV
Pvalue <- pnorm(z,lower.tail = FALSE)
Pvalue
Pvalue < sig
p > sig
z > CV
#ex2 proportion
#occur with 21.55%
#h0:u=0.2155 , h1:u/=0.2155
mydata <- data.frame(Xr12_115)
#View(mydata)
str <- c(mydata$Hands)
mydata$Hands <- as.factor(mydata$Hands)
table(mydata$Hands) #1=786 #2=254
#claims are above ave intelligence
#ramdom sample =30 , avg=112.5
#avg population =100, sd=15
#h0:u<=100 / h1:>100
pmean <- 100
#non-Reject h0.on average the containers are not mislabeled.
#=
#t.test(mydata$weights,alternative = " wo.sided",mu=7.91,conf.level=0.9)
#===============================
#ex4 t-test
#claims are above ave intelligence
#ramdom sample =30 , avg=112.5
#avg population =100, sd=15
#h0:u<=100 / h1:>100
pmean <- 100
xbar <- 112.5
n <- 30
alpha <- 0.05
ssd <- 15
t <- (xbar-pmean)/(ssd/sqrt(n))
t
Pvalue = 2*pt(t,df=n-1,lower.tail = FALSE)
Pvalue
Pvalue >alpha #0>0.05 #False
#ex5 varience
#h0:a^2=20 / h1:a^2>20
#scores on 25-point quiz,random sample=5
#population = 18,16,10,13,23 , 10% sig
str <- c(18,16,10,13,23)
ssd <-sd(str)
ssd #4.94
svar <- ssd*ssd
pvar <- 20
n <- 5
alpha <- 0.1
chi <- (n-1)*svar/pvar
Pvalue = 2*pchisq(chi,df=n-1,lower.tail = FALSE)
Pvalue
#ex5 varience
#h0:a^2=20 / h1:a^2>20
#scores on 25-point quiz,random sample=5
#population = 18,16,10,13,23 , 10% sig
str <- c(18,16,10,13,23)
ssd <-sd(str)
ssd #4.94
svar <- ssd*ssd
pvar <- 20
n <- 5
alpha <- 0.1
chi <- (n-1)*svar/pvar
chi
Pvalue = 2*pchisq(chi,df=n-1,lower.tail = FALSE)
Pvalue
Pvalue > alpha #0.59 > 0.1 #true
#Reject h0,the hypotheses h1:a^2>20 are correct
#=
#右尾檢定
#Pvalue = pchisq(chi,df=n-1,lower.tail = FALSE) #0.2977
#Pvalue > alpha #FALSE
#==========================
#ex6 proportion
#random sample=500,planned to vote yes=320
#more than 60% yes. 5%sig
#h0:u<=60% /  h1:u>60%
phat <- 0.6
p <- 0.64
n <- 500
alpha <- 0.1
z <- (phat-p)/sqrt(p*(1-p)/n)
z
alpha <- 0.1
z <- (phat-p)/sqrt((p*(1-p)/n)
Pvalue = 2*pnorm(z,lower.tail = FALSE)
#Reject h0,the hypotheses h1:a^2>20 are correct
#=
#右尾檢定
#Pvalue = pchisq(chi,df=n-1,lower.tail = FALSE) #0.2977
#Pvalue > alpha #FALSE
#==========================
#ex6 proportion
#random sample=500,planned to vote yes=320
#more than 60% yes. 5%sig
#h0:u<=60% /  h1:u>60%
phat <- 0.6
p <- 0.64
n <- 500
alpha <- 0.1
z <- (phat-p)/sqrt((p*(1-p)/n)
Pvalue = 2*pnorm(z,lower.tail = FALSE)
#Reject h0,the hypotheses h1:a^2>20 are correct
#=
#右尾檢定
#Pvalue = pchisq(chi,df=n-1,lower.tail = FALSE) #0.2977
#Pvalue > alpha #FALSE
#==========================
#ex6 proportion
#random sample=500,planned to vote yes=320
#more than 60% yes. 5%sig
#h0:u<=60% /  h1:u>60%
phat <- 0.6
p <- 0.64
n <- 500
alpha <- 0.1
z <- (phat-p)/sqrt(p*(1-p)/n)
z
Pvalue = 2*pnorm(z,lower.tail = FALSE)
Pvalue
Pvalue = pnorm(z,lower.tail = FALSE)
Pvalue
# 0.03490332 0.04289668
#=yes
#=========================
#ex8 t-test
#average score higher than national average 1300
#sd=125, random sample=25,average=1375
#h0:u<=1300  h1:u>1300
pmean <- 1300
ssd <- 125
n <- 25
xbar <- 1375
alpha <- 0.025
t <- (xbar-pmean)/(ssd/sqrt(n))
t
Pvalue = 2*pt(t,df=n-1,lower.tail = FALSE)
Pvalue
#ex9
#random sample=10,age=22,17...24
#1.estimate the population mean with 90% confident
str <- c(22,17,27,20,23,19,24,18,19,24)
xbar <- mean(str)
xbar #21.3
#2.test to determin if we can infer at the 5% sig is not equal to20
#h0:u=20  h1:u/=20
pmean <-20
n <- 10
xbar <- mean(str)
ssd <- sd(str)
alpha <- 0.05
t <- (xbar-pmean)/(ssd/sqrt(n))
t
Pvalue <- 2*pt(t,df=n-1,lower.tail = FALSE)
Pvalue
Pvalue < alpha #0.2308 < 0.05 #false
#ex10
rain <- c(7.5,1.5,5.5,111.7,286.0,233.5,148.9,806.5,60.2,0.0,6.1,21.1)
#創造倆的變數把原生資料排入
m <-c(8,8,7,8,8.5,9.5,8.4,8.2)
f <-c(5,5,5.2,5.3,5.5,5.2,5.2,5)
sv2 <- var(f)
sv1 <- var(m)
n1 <-sum(complete.cases(m))
n2 <-sum(complete.cases(f))
Alpha <- 0.05
F <- sv1/sv2
F
Pvalue <- 2*pf(F,df1=n1-1,df2=n2-1,lower.tail = FALSE)
Pavlue < Alpha
n1
n2 <-sum(complete.cases(f))
n2
Pvalue
#創造倆的變數把原生資料排入
m <-c(8,8,7,8,8.5,9.5,8.4,8.2)
f <-c(5,5,5.2,5.3,5.5,5.2,5.2,5)
#存儲m的var平均
sv1 <- var(m)
sv2 <- var(f)
#n裡面有幾個完整的case
n1 <-sum(complete.cases(m))
n1
n2 <-sum(complete.cases(f))
n2
#顯著水準
Alpha <- 0.1
F <- sv1/sv2
F
Pvalue <- 2*pf(F,df1=n1-1,df2=n2-1,lower.tail = FALSE)
Pvalue
Pvalue < Alpha
